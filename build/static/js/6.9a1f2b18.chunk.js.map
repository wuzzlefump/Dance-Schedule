{"version":3,"sources":["screens/Todo/style.module.css","screens/Todo/controller.js","screens/Todo/Index.js"],"names":["module","exports","List","list","currentInputValue","Model","ToDoList","use","set","savedToDoList","JSON","parse","localStorage","getItem","React","of","className","styles","todoContainer","map","item","index","onFocus","x","console","log","pop","setItem","stringify","type","inputContainer","onChange","e","target","value","name","onClick","preventDefault","includes","save"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,cAAgB,+B,mJCCpEC,EAAb,4MACEC,KAAO,GADT,EAEEC,kBAAoB,GAFtB,YAA0BC,S,OCGX,SAASC,IAAY,IAAD,EACQJ,EAAKK,MAAtCJ,EADyB,EACzBA,KAAMC,EADmB,EACnBA,kBAAmBI,EADA,EACAA,IAC3BC,EAC0C,OAA9CC,KAAKC,MAAMC,aAAaC,QAAQ,UAC5BH,KAAKC,MAAMC,aAAaC,QAAQ,UAChC,GAoBN,OALAC,aAAgB,WACd,OACKN,EAAIL,KADgB,OAAlBM,EACSA,EACA,KACf,IAED,cAAC,WAAD,CAAUM,GAAIb,EAAMC,KAAMA,EAAMC,kBAAmBA,EAAnD,SACE,gCACE,qBAAKY,UAAWC,IAAOC,cAAvB,SACGf,EAAKgB,KAAI,SAACC,EAAMC,GACf,OACE,iCACE,uBACEC,QAAS,WACP,IAAIC,EAAIpB,EACRqB,QAAQC,IAAIF,GACZA,EAAEG,IAAIN,GACNZ,EAAIL,KAAJ,YAAeoB,GACfX,aAAae,QAAQ,QAASjB,KAAKkB,UAAL,YAAmBL,MAEnDM,KAAM,aAER,+BAAOT,YAKf,sBAAKJ,UAAWC,IAAOa,eAAvB,UACE,uBACEC,SAAU,SAACC,GACTxB,EAAIJ,kBAAoB4B,EAAEC,OAAOC,MACjCV,QAAQC,IAAIrB,IAEd+B,KAAM,UACND,MAAO9B,IAET,wBACEgC,QAAS,SAACJ,IAlDP,SAACA,GAGZ,GAFAA,EAAEK,iBACFb,QAAQC,IAAIhB,GACRN,EAAKmC,SAASlC,GAChB,OAAO,KAEPI,EAAIL,KAAJ,sBAAeA,GAAf,CAAqBC,IACrBQ,aAAae,QACX,QACAjB,KAAKkB,UAAL,sBAAmBzB,GAAnB,CAAyBC,MA0CnBmC,CAAKP,IAFT","file":"static/js/6.9a1f2b18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"style_inputContainer__J49bz\",\"todoContainer\":\"style_todoContainer__2JJnm\"};","import { Model } from \"@expressive/mvc\";\n\nexport class List extends Model {\n  list = [];\n  currentInputValue = \"\";\n}\n","import * as React from \"react\";\nimport styles from \"./style.module.css\";\nimport { Provider } from \"@expressive/mvc\";\nimport { List } from \"./controller\";\n\nexport default function ToDoList() {\n  const { list, currentInputValue, set } = List.use();\n  const savedToDoList =\n    JSON.parse(localStorage.getItem(\"todos\")) !== null\n      ? JSON.parse(localStorage.getItem(\"todos\"))\n      : [];\n\n  const save = (e) => {\n    e.preventDefault();\n    console.log(savedToDoList);\n    if (list.includes(currentInputValue)) {\n      return null;\n    } else {\n      set.list = [...list, currentInputValue];\n      localStorage.setItem(\n        \"todos\",\n        JSON.stringify([...list, currentInputValue])\n      );\n    }\n  };\n  React.useEffect(() => {\n    return savedToDoList !== null\n      ? (set.list = savedToDoList)\n      : (set.list = []);\n  }, []);\n  return (\n    <Provider of={List} list={list} currentInputValue={currentInputValue}>\n      <div>\n        <div className={styles.todoContainer}>\n          {list.map((item, index) => {\n            return (\n              <span>\n                <input\n                  onFocus={() => {\n                    let x = list;\n                    console.log(x);\n                    x.pop(item);\n                    set.list = [...x];\n                    localStorage.setItem(\"todos\", JSON.stringify([...x]));\n                  }}\n                  type={\"checkbox\"}\n                />\n                <span>{item}</span>\n              </span>\n            );\n          })}\n        </div>\n        <div className={styles.inputContainer}>\n          <input\n            onChange={(e) => {\n              set.currentInputValue = e.target.value;\n              console.log(currentInputValue);\n            }}\n            name={\"newToDo\"}\n            value={currentInputValue}\n          />\n          <button\n            onClick={(e) => {\n              save(e);\n            }}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n"],"sourceRoot":""}